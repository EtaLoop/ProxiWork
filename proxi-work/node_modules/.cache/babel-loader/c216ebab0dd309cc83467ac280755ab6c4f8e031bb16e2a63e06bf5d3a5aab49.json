{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/Epitech-ann\\xE9e-2/projetWeek/ProxiWork/proxi-work/src/MapContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\n\n// Option A: Hardcode your API key here (not recommended in production)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyCuRA36AzIS5o-83Qx1V6Rc90NXsZRwU4o';\n\n// Option B: Use an environment variable for security (.env file with REACT_APP_GOOGLE_MAPS_KEY=xxx)\n// Then read it: process.env.REACT_APP_GOOGLE_MAPS_KEY\n// Make sure to restart `npm start` after changing .env\nconst apiKey = process.env.REACT_APP_GOOGLE_MAPS_KEY || GOOGLE_MAPS_API_KEY;\nfunction loadScript(url) {\n  const existingScript = document.getElementById('googleMaps');\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = url;\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n    return script;\n  }\n  return existingScript;\n}\nconst MapContainer = () => {\n  _s();\n  const googleMapRef = useRef(null); // For referencing the map container <div>\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n\n  // 1) Load the Google Maps script once\n  useEffect(() => {\n    const script = loadScript(`https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`);\n    script.addEventListener('load', onScriptLoad);\n    return () => {\n      script.removeEventListener('load', onScriptLoad);\n    };\n  }, []);\n\n  // 2) Initialize the map\n  const onScriptLoad = () => {\n    // The ref holds the <div> in which we'll inject our Google Map\n    const googleMap = new window.google.maps.Map(googleMapRef.current, {\n      center: {\n        lat: 40.7128,\n        lng: -74.006\n      },\n      zoom: 10\n    });\n    setMap(googleMap);\n\n    // Optionally, add a click listener to the map to add markers\n    googleMap.addListener('click', e => {\n      const newMarker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: googleMap\n      });\n      newMarker.addListener('click', () => {\n        console.log('Marker clicked!');\n        // or alert('Marker clicked!')\n      });\n      // Update the state to keep track of all markers\n      setMarkers(prev => [...prev, newMarker]);\n    });\n  };\n\n  // 3) Render the map container\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '60%',\n      height: '80vh',\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: googleMapRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(MapContainer, \"hEx4VB1kKByr1X20iBs73U6EaNg=\");\n_c = MapContainer;\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","apiKey","process","env","REACT_APP_GOOGLE_MAPS_KEY","loadScript","url","existingScript","document","getElementById","script","createElement","src","id","body","appendChild","MapContainer","_s","googleMapRef","map","setMap","markers","setMarkers","addEventListener","onScriptLoad","removeEventListener","googleMap","window","google","maps","Map","current","center","lat","lng","zoom","addListener","e","newMarker","Marker","position","latLng","console","log","prev","style","width","height","margin","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/diego/Documents/Epitech-annÃ©e-2/projetWeek/ProxiWork/proxi-work/src/MapContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\n// Option A: Hardcode your API key here (not recommended in production)\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyCuRA36AzIS5o-83Qx1V6Rc90NXsZRwU4o';\n\n// Option B: Use an environment variable for security (.env file with REACT_APP_GOOGLE_MAPS_KEY=xxx)\n// Then read it: process.env.REACT_APP_GOOGLE_MAPS_KEY\n// Make sure to restart `npm start` after changing .env\nconst apiKey = process.env.REACT_APP_GOOGLE_MAPS_KEY || GOOGLE_MAPS_API_KEY;\n\nfunction loadScript(url) {\n  const existingScript = document.getElementById('googleMaps');\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = url;\n    script.id = 'googleMaps';\n    document.body.appendChild(script);\n    return script;\n  }\n  return existingScript;\n}\n\n\n\nconst MapContainer = () => {\n  const googleMapRef = useRef(null); // For referencing the map container <div>\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n\n  // 1) Load the Google Maps script once\n  useEffect(() => {\n    const script = loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`\n    );\n    script.addEventListener('load', onScriptLoad);\n    return () => {\n      script.removeEventListener('load', onScriptLoad);\n    };\n  }, []);\n\n  // 2) Initialize the map\n  const onScriptLoad = () => {\n    // The ref holds the <div> in which we'll inject our Google Map\n    const googleMap = new window.google.maps.Map(googleMapRef.current, {\n      center: { lat: 40.7128, lng: -74.006 },\n      zoom: 10,\n    });\n    setMap(googleMap);\n\n    // Optionally, add a click listener to the map to add markers\n    googleMap.addListener('click', (e) => {\n      const newMarker = new window.google.maps.Marker({\n        position: e.latLng,\n        map: googleMap,\n      });\n\n      newMarker.addListener('click', () => {\n        console.log('Marker clicked!');\n        // or alert('Marker clicked!')\n      });\n      // Update the state to keep track of all markers\n      setMarkers((prev) => [...prev, newMarker]);\n    });\n  };\n\n  \n\n  // 3) Render the map container\n  return (\n    <div style={{ width: '60%', height: '80vh', margin: 'auto' }}>\n      <div \n        ref={googleMapRef}\n        style={{ width: '100%', height: '100%' }}\n      />\n    </div>\n  );\n};\n\nexport default MapContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}